- name: install packages
  tags: provision
  action: apt pkg={{item}} state=installed update_cache=yes
  with_items:
    - git-core
    - nginx
    - python-virtualenv
    - supervisor
    - uwsgi
    - uwsgi-plugin-python
    - coffeescript
    - libffi-dev

- name: start supervisord service and have it run during system startup
  tags: provision
  action: service name=supervisor state=started enabled=yes

- name: start nginx service and have it run during system startup
  tags: provision
  action: service name=nginx state=started enabled=yes

- name: create webapps directory
  tags: provision
  action: file dest=/srv/webapps state=directory

- name: ensure log directory
  action: file dest={{webapps_dir}}/{{app_name}}/log state=directory

- name: deploy code from repository
  action: git
  args:
      repo: "{{repo_url}}"
      dest: "{{webapps_dir}}/{{app_name}}/src"
      remote: "{{repo_remote}}"
      version: "{{repo_version}}"
  notify:
    - restart app

- name: install dependencies into virtualenv
  action: pip
  args:
      requirements: "{{webapps_dir}}/{{app_name}}/src/requirements.txt"
      virtualenv: "{{webapps_dir}}/{{app_name}}/venv"
      state: present

- name: create supervisor program config
  action: template
  args:
      src: templates/supervisor.ini
      dest: /etc/supervisor/conf.d/{{app_name}}.conf
  notify:
    - restart app

- name: delete nginx default site
  when: delete_default_site is defined
  action: file
  args:
      name: /etc/nginx/sites-enabled/default
      state: absent
  notify:
    - restart nginx

- name: create nginx site config
  action: template
  args:
      src: templates/nginx_site.conf
      dest: /etc/nginx/sites-available/{{app_name}}.conf
  notify:
    - restart nginx

- name: create SSL directory
  action: file dest=/etc/nginx/ssl state=directory

- name: create self-signed SSL cert
  action: command openssl req -new -nodes -x509 -subj /C=FR/S=Ile-de-France/L=Paris/OU=IT/O=Cloverfeed/CN={{server_name}} -days 730 -keyout /etc/nginx/ssl/{{app_name}}.key -out /etc/nginx/ssl/{{app_name}}.crt -extensions v3_ca
  args:
      creates: /etc/nginx/ssl/{{app_name}}.crt
  notify:
    - restart nginx

- name: link nginx config
  action: file
  args:
      src: /etc/nginx/sites-available/{{app_name}}.conf
      dest: /etc/nginx/sites-enabled/{{app_name}}.conf
      state: link

- name: start app
  action: supervisorctl name={{app_name}} state=started
